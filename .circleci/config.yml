workflows:
  version: 2
  pipeline:
    jobs:
      - checkout_code:
          filters:
            branches:
              only:
                - master
      - compile:
          requires:
            - checkout_code
      - unit_test:
          requires:
            - compile
      - integration_test:
          requires:
            - compile
      - acceptance_test:
          requires:
            - compile
      - package:
          requires:
            - unit_test
            - integration_test
            - acceptance_test
      - generate_docker_image:
          requires:
            - package
      - merge_with_master:
          requires:
            - generate_docker_image


version: 2

defaults: &mavenAndworkdir
  docker:
      # specify the version you desire here
      - image: circleci/openjdk:9-jdk

  environment:
    # Customize the JVM maximum heap limit
    MAVEN_OPTS: -Xmx3200m

  working_directory: ~/project



jobs:
  #Phases

  checkout_code:
    <<: *mavenAndworkdir

    steps:
      - checkout


      # Fetch all git submodules
      - run: git submodule sync
      - run: git submodule update --init --recursive

     # Save repo in cache
      - save_cache:
          paths:
            - ~/project
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

  ## Phase Resolve Deps
  compile:
    <<: *mavenAndworkdir

    steps:

      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-


      # Download and cache dependencies
      - run: mvn clean compile

      # Save dependencies in cache
      - save_cache:
          paths:
            - ~/.m2
          key: dependencies-{{ checksum "pom.xml" }}

  ## Compile and Run Test Suite
  unit_test:
    <<: *mavenAndworkdir


    steps:
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      # run tests!
      - run: mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent test sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=pet-project-mog-github -Dsonar.login=796ea3c723826019f4dd591de407b22284d9bdcf

  integration_test:
    <<: *mavenAndworkdir

    steps:
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      # run tests!
      - run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent test sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=pet-project-mog-github -Dsonar.login=796ea3c723826019f4dd591de407b22284d9bdcf

  acceptance_test:
    <<: *mavenAndworkdir

    steps:
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      # run tests!
      - run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent test sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=pet-project-mog-github -Dsonar.login=796ea3c723826019f4dd591de407b22284d9bdcf

  ## Packaging
  package:
    <<: *mavenAndworkdir

    steps:
      # Save dependencies in cache
      - save_cache:
          paths:
            - ~/.m2
          key: target-{{ .Environment.CIRCLE_SHA1 }}
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      # run tests!
      - run: mvn package -DSkipTest

  ## Build Application Container Image
  generate_docker_image:
    docker:
        - image: docker:17.12.0-ce-git

    working_directory: ~/project

    steps:
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - target-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      - run: find . -name "*.jar*
      - run: docker --version

  #Send to Production
  merge_with_master:
    docker:
        - image: docker:17.12.0-ce-git
    steps:
      # Restore dependencies and repo from cache
      - restore_cache:
          keys:
          - repo-{{ .Environment.CIRCLE_SHA1 }}
          - target-{{ .Environment.CIRCLE_SHA1 }}
          - dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      # run tests!
      - run: ls
      - run: git status

